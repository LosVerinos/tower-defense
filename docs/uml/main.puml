@startuml "OniDefense"

package "System" {
    class GameManager {
        + map : Map
        + towerList : List<Tower>
        + oniList : List<Oni>
        - Awake()
        + NotifyTowers()
    }

    GameManager --> GameManager : Instance <<static>>
}



package Building {

    

    package AttackStrategies {
        interface IAttackStrategy {
        + ExecuteAttack(tower : Tower, enemy : Oni)
        }
        class SingleTargetStrategy implements IAttackStrategy {
            + ExecuteAttack(tower : Tower, enemy : Oni)
        }
        class AoeStrategy implements IAttackStrategy {
            + ExecuteAttack(tower : Tower, enemy : Oni)
        }
    }

    class Tower {
        {abstract} Attack()
        + OnEnemyDetected()
    }

    Tower --* AttackStrategies.IAttackStrategy : Strategy


    class SamouraiTower extends Tower {
        + Attack()
    }

}

package Enemy {
    abstract class Oni {
        + health : float
        + speed : float
        {abstract} Move()
    }

    class EnemySpawner {
        + prefab : UnityEngine.GameObject
        + SpawnEnemy(position : Vector3)
    }
}


@enduml "OniDefense"
