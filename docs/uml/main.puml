@startuml

class PlayerStats {
    - Money : int
    - fireRateMultiplier : float
    - moneyMultiplier : int
    + DecreaseMoney(amount : int) : void
    + DefenseBuilt() : void
}

class Effect {
    - isActive : bool
    - node : Node
    + ApplyEffect(_node : Node) : void
    + RemoveEffect() : void
}

class AirStrikeEffect {
    - obusPrefab : GameObject
    - spawnHeight : float
    - delayBeforeDrop : float
    - targetObject : GameObject
    - spawnRadius : float
    + ApplyEffect(_node : Node) : void
    - DropObus() : void
    - ReleaseNode() : IEnumerator
}

class BonusShopScript {
    - surplusCost : int
    - richZombieCost : int
    - bonusDuration : float
    + BuySurplusAmmo() : void
    - ActivateSurplusAmmo() : IEnumerator
    + BuyRichZombie() : void
    - ActivateRichZombie() : IEnumerator
}

class BuildManager {
    - defenseToBuild : Defense
    - selectedNode : Node
    - selectUI : SelectUIScript
    + GetInstance() : BuildManager
    + GetDefenseToBuild() : Defense
    + CanBuild() : bool
    + SelectNode(node : Node) : void
    + DeselectNode() : void
    + SelectDefenseToBuild(_defense : Defense) : void
    + BuildDefenseOn(node : Node, activate : bool, isUpgrade : bool) : void
}

class CameraControllerScript {
    - panSpeed : float
    - panBorderThickness : float
    - scrollSpeed : float
    - yMin : float
    - yMax : float
    - zMin : float
    - zMax : float
    - xMin : float
    - xMax : float
    + Update() : void
    - CalculateZMax(cameraY : float) : float
    - CalculateXMin(cameraY : float) : float
    - CalculateXMax(cameraY : float) : float
}

class Defense {
    - upgradeStates : List<DefenseUpgradeState>
    - upgradeLevel : int
}

class DefenseScript {
    - currentHealth : float
    - defenseData : Defense
    - baseHealth : float
    - healthBar : Image
    - canvas : Canvas
    - canvasGroup : CanvasGroup
    - fadeCoroutine : Coroutine
    - lastDamageTime : float
    + Initialize(data : Defense) : void
    + TakeDamage(amount : float) : void
    - DestroyDefense() : void
    - StartFadeDelay() : IEnumerator
    - FadeOutHealthBar() : IEnumerator
}

class DefenseUpgradeState {
    - prefab : GameObject
    - maximumRange : float
    - damages : float
    - fireRate : float
    - cost : int
    - health : float
}

class Node {
    - defense : GameObject
    - defenseClass : Defense
    - positionOffset : Vector3
    - tempDefense : GameObject
    + UpgradeDefense() : void
    + SellDefense() : void
}

class NodeScript {
    + SetHover(hover : bool) : void
    + OnMouseDown() : void
}

class EnemyBase {
    - baseHealth : float
    - reward : int
    - damage : int
    - difficultyWeight : float
    - isDead : bool
    - health : float
    - healthBar : Image
    - canvas : Canvas
    - agent : NavMeshAgent
    + Start() : void
    + Update() : void
    + TakeDamages(damages : float) : void
    + Die() : void
}

class ExplosiveZombie {
    - explosionRadius : float
    - explosionDamage : float
    - explosionEffect : GameObject
    + Die() : void
    - Explode() : void
    - CalculateDamageMultiplier(distance : float) : float
}

class FlyingEnemyNavigationScript {
    - objectivePoint : Transform
    - speed : float
    - flightHeight : float
    - smoothRotationSpeed : float
    - velocity : Vector3
    + Start() : void
    + Update() : void
    - OnReachedDestination() : void
    - MoveTowardsTarget() : void
}

class GameManager {
    - gameOverPanel : GameObject
    + isRunning : bool
    + Start() : void
    + Update() : void
    - EndGame() : void
    + PauseGame() : void
    + StartGame() : void
}

class GameOverPanelScript {
    - stats : StatsUIScript
    - mainMenuUI : GameObject
    - rankingText : TextMeshProUGUI
    + OnRestartButtonClick() : void
    + Activate(activate : bool) : void
    + Menu() : void
    - UpdateRankingDisplay() : void
}

class LivesUIScript {
    - livesText : TextMeshProUGUI
    + Start() : void
    + Update() : void
}

class MainMenu {
    - ui : GameObject
    - rankingText : TextMeshProUGUI
    - playerNameInput : TMP_InputField
    - playerName : string
    + Start() : void
    + StartButton() : void
    + Quit() : void
    - DisplayRanking() : void
}

class MoneyUIScript {
    - moneyText : TextMeshProUGUI
    + Start() : void
    + Update() : void
}

class ObusScript {
    - target : Transform
    - speed : float
    - bulletImpact : GameObject
    - damagesRadius : float
    - damages : float
    - destination : Vector3
    - startPosition : Vector3
    - flightTime : float
    - elapsedTime : float
    - arcHeight : float
    - previousPosition : Vector3
    - aerialLaunch : bool
    + Find(target : Transform) : void
    + SetDamage(damages : float) : void
    + Update() : void
    - Explode() : void
    - CalculateDamageMultiplier(distance : float) : float
    - Damage(colliderTransform : Transform, damagesTaken : float) : void
    + SetAerialLaunch(aerialLaunch : bool) : void
    + SetSpeed(newSpeed : float) : void
}

class PauseMenu {
    - ui : GameObject
    - mainMenuUI : GameObject
    + Update() : void
    + Toggle() : void
    + Retry() : void
    + Menu() : void
}

class RankingSystem {
    + LoadScores() : ScoreList
    + SaveScores(scoreList : ScoreList) : void
    + AddNewScore(playerName : string, newScore : int) : void
}

class SelectUIScript {
    - target : Node
    - ui : GameObject
    + SetTarget(target : Node) : void
    + Hide() : void
    + Upgrade() : void
    + Sell() : void
}

class ShopScript {
    - object1 : Defense
    - object2 : Defense
    - object3 : Defense
    - object4 : Defense
    - buildManager : BuildManager
    - shopButtonObject1 : Button
    - shopButtonObject2 : Button
    - shopButtonObject3 : Button
    - shopButtonObject4 : Button
    + SelectObject1() : void
    + SelectObject2() : void
    + SelectObject3() : void
    + SelectObject4() : void
    + Start() : void
    + Update() : void
}

class ShopUIScript {
    - defensesButton : GameObject
    - supportButton : GameObject
    - bonusButton : GameObject
    - closeButton : GameObject
    - currentPanel : GameObject
    - isPanelDeployed : bool
    + DeployPanel(panel : GameObject) : void
    + ShrinkOtherPanels() : void
    + ShrinkAll() : void
    + MovePanels(panels : GameObject[], movement : Vector3) : void
}

class SlowEffect {
    + ApplyEffect(_node : Node) : void
    + OnTriggerEnter(otherCollider : Collider) : void
    + OnTriggerExit(otherCollider : Collider) : void
    + ApplyEffectSpeed(collider : Transform, speedMultiplier : float) : void
}

class SpecialWaveFactory {
    + CreateWave(waveNumber : int) : Wave
}

class StandardWaveFactory {
    + CreateWave(waveNumber : int) : Wave
    + CalculateZombiesForWave(waveNumber : int) : int
}

class StatsUIScript {
    - statsText : TextMeshProUGUI
    + DisplayStats() : void
}

class TurretScript {
    - target : Transform
    - maximumRange : float
    - minimumRange : float
    - turningSpeed : float
    - damages : float
    - fireRate : float
    - fireCountdown : float
    - enemyLayer : LayerMask
    - movingPartY : Transform
    - movingPartX : Transform
    - bulletPrefab : GameObject
    - firePoint : Transform
    - muzzleFlash : GameObject
    - defaultRotationX : Quaternion
    - defaultRotationY : Quaternion
    - active : bool
    + Start() : void
    + Initialize() : void
    + UpdateTarget() : bool
    + Update() : void
    + Shoot() : void
    + SetActive(active : bool) : void
}

class Wave {
    - count : int
    - zombieRatios : Dictionary<int, float>
    - isSpecialWave : bool
    - specialWaveType : string
    - bossCount : int
}

class WaveBuilder {
    - wave : Wave
    + WaveBuilder(waveNumber : int)
    + DoubleWaveCount() : WaveBuilder
    + AddZombieType(type : int, ratio : float) : WaveBuilder
    + SetSpecialWave(type : string) : WaveBuilder
    + SetBossCount(waveNumber : int) : WaveBuilder
    + Build() : Wave
    + CalculateZombiesForWave(waveNumber : int) : int
}

abstract class WaveFactory {
    + CreateWave(waveNumber : int) : Wave
}

class WaveSpawner {
    - Instance : WaveSpawner
    - EnemiesAliveCount : int
    - spawnPoint : Transform
    - alternativeSpawnPoint : Transform
    - altSpawnProbability : float
    - generatedWaves : List<Wave>
    - waveIndex : int
    + Start() : void
    + Update() : void
    + SpawnWave() : IEnumerator
    + EnemyDied() : void
    + EnemySpawned() : void
    + ResetEnemiesAliveCount() : void
    + GenerateNextWave() : void
    + CalculateZombiesForWave(waveNumber : int) : int
    + ResetWaveSpawner() : void
}

class WaveUIScript {
    - waveText : TextMeshProUGUI
    - waveManager : WaveSpawner
    + Start() : void
    + Update() : void
}

class ZombieFactory {
    - enemyHealthMultiplier : float
    - enemySpeedMultiplier : float
    - defaultObjectivePoint : Transform
    - zombies : GameObject[]
    + SpawnZombie(waveNumber : int, selectedZombie : int, spawnLocation : Transform) : void
}

EnemyBase <|-- ExplosiveZombie
EnemyBase <-- FlyingEnemyNavigationScript
DefenseScript --> Defense
DefenseScript --> Image
DefenseScript --> Canvas
DefenseScript --> Coroutine
DefenseScript --> CanvasGroup
DefenseScript --> GameObject
DefenseScript --> Effect
Node --> Defense
NodeScript --> Node
NodeScript --> BuildManager
EnemyBase --> PlayerStats
EnemyBase --> WaveSpawner

PlayerStats --> BuildManager
BuildManager --> Defense
BuildManager --> Node
BuildManager --> SelectUIScript
BuildManager --> DefenseUpgradeState
AirStrikeEffect --> Node
BonusShopScript --> PlayerStats
GameManager --> GameOverPanelScript
GameOverPanelScript --> StatsUIScript
GameOverPanelScript --> PlayerStats
MainMenu --> GameManager
MainMenu --> RankingSystem
MainMenu --> PlayerPrefs
MoneyUIScript --> PlayerStats
LivesUIScript --> PlayerStats
ObusScript --> PlayerStats
PauseMenu --> GameManager
PauseMenu --> SceneManager
RankingSystem --> MainMenu
SelectUIScript --> Node
SelectUIScript --> BuildManager
ShopScript --> PlayerStats
ShopScript --> BuildManager
ShopScript --> Defense
ShopUIScript --> GameObject
ShopUIScript --> Vector3
SlowEffect --> Effect
SlowEffect --> Node
SlowEffect --> NavMeshAgent
SpecialWaveFactory --> WaveFactory
SpecialWaveFactory --> WaveBuilder
StandardWaveFactory --> WaveFactory
StandardWaveFactory --> WaveBuilder
StatsUIScript --> PlayerStats
StatsUIScript --> TextMeshProUGUI
TurretScript --> PlayerStats
TurretScript --> GameObject
TurretScript --> BulletScript
TurretScript --> ObusScript
WaveBuilder --> Wave
WaveBuilder --> WaveFactory
WaveFactory <|-- SpecialWaveFactory
WaveFactory <|-- StandardWaveFactory
WaveSpawner --> Wave
WaveSpawner --> ZombieFactory
WaveSpawner --> GameManager
WaveSpawner --> PlayerStats
WaveUIScript --> WaveSpawner
WaveUIScript --> TextMeshProUGUI
ZombieFactory --> WaveSpawner
ZombieFactory --> GameObject
ZombieFactory --> AINavigationScript
ZombieFactory --> FlyingEnemyNavigationScript

@enduml
